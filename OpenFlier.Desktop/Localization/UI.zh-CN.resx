<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDescription" xml:space="preserve">
    <value>OpenFlier Insider
不代表最终产品。</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="AppearancesTitle" xml:space="preserve">
    <value>外观</value>
  </data>
  <data name="ApplyButtonContent" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="CommandInputPluginsTitle" xml:space="preserve">
    <value>CommandInput 插件</value>
  </data>
  <data name="ConfigureButton" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="ContinueText" xml:space="preserve">
    <value>继续</value>
  </data>
  <data name="CopyrightString" xml:space="preserve">
    <value>版权所有 © 2023, OpenFlier 贡献者。 保留所有权利。</value>
  </data>
  <data name="EmulatedVersionDescription" xml:space="preserve">
    <value>中育课堂助手将其版本号发送至平板端。
在此处指定最新的版本号。</value>
  </data>
  <data name="EmulatedVersionTitle" xml:space="preserve">
    <value>仿冒版本</value>
  </data>
  <data name="EnableWindowEffectsCheckBoxContent" xml:space="preserve">
    <value>启用窗口特效</value>
  </data>
  <data name="EnableWindowEffectsTitle" xml:space="preserve">
    <value>窗口特效</value>
  </data>
  <data name="FileTitle" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="FunZoneDescription" xml:space="preserve">
    <value>一些实验性的功能，玩的开心！</value>
  </data>
  <data name="FunZoneTitle" xml:space="preserve">
    <value>乐一乐</value>
  </data>
  <data name="GeneralTitle" xml:space="preserve">
    <value>通用</value>
  </data>
  <data name="LoadingServiceString" xml:space="preserve">
    <value>正在加载服务...</value>
  </data>
  <data name="MachineIdentifierTitle" xml:space="preserve">
    <value>系统识别码</value>
  </data>
  <data name="MqttServerPortTitle" xml:space="preserve">
    <value>MQTT 服务器端口</value>
  </data>
  <data name="MqttServicePluginsTitle" xml:space="preserve">
    <value>MQTT 服务插件</value>
  </data>
  <data name="PluginsTitle" xml:space="preserve">
    <value>插件</value>
  </data>
  <data name="SpecialChannelsTitle" xml:space="preserve">
    <value>SpecialChannels</value>
  </data>
  <data name="SpecifiedConnectCodeTitle" xml:space="preserve">
    <value>连接密码</value>
  </data>
  <data name="SpecifiedMachineIdentifierTitle" xml:space="preserve">
    <value>系统识别码</value>
  </data>
  <data name="UdpPortTitle" xml:space="preserve">
    <value>UDP 广播端口</value>
  </data>
  <data name="UpdatesTitle" xml:space="preserve">
    <value>更新</value>
  </data>
  <data name="UsePngCheckBoxContent" xml:space="preserve">
    <value>使用 PNG 格式</value>
  </data>
  <data name="UsePngDescription" xml:space="preserve">
    <value>OpenFlier 默认使用 JPEG 作为截图格式。
勾选以下复选框以使用 PNG 格式。</value>
  </data>
  <data name="UsePngTitle" xml:space="preserve">
    <value>截图格式</value>
  </data>
  <data name="VideoPlayTitle" xml:space="preserve">
    <value>放个视频！</value>
  </data>
  <data name="GithubHyperLink" xml:space="preserve">
    <value>Github</value>
  </data>
  <data name="EnableWindowEffectsDescription" xml:space="preserve">
    <value>启用窗口特效，即 Windows 11 下的 Mica 效果，或 Windows 7 下的 Aero 效果。 </value>
  </data>
  <data name="VideoPlayOpenButton" xml:space="preserve">
    <value>选择所有帧</value>
  </data>
  <data name="UpdatesDescription" xml:space="preserve">
    <value>此版本 OpenFlier 不支持在线更新。</value>
  </data>
  <data name="VideoPlayDescription" xml:space="preserve">
    <value>选择视频的所有帧，设置时间间隔，然后播放！ （建议10 ~ 20 fps。可以使用 ffmpeg 手动提取帧。）</value>
  </data>
  <data name="PluginEnabledCheckBox" xml:space="preserve">
    <value>是否启用</value>
  </data>
  <data name="CommandInputUserListTitle" xml:space="preserve">
    <value>CommandInput 用户</value>
  </data>
</root>